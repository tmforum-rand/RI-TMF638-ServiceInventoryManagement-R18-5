{
  "name": "service-inventory-management",
  "version": "4.0.0",
  "description": "## TMF API Reference : TMF 638 - Service Inventory Management v4 Release 18.5 - Dec 2018  The intent of this API is to provide a consistent/standardized mechanism to query and manipulate the Service inventory.  The Service Inventory API can be used to query the service instances for a customer via Self Service Portal or the Call Centre operator can query the service instances on behalf of the customer while a customer may have a complaint or a query. Note: Only the CustomerFacingServices instances will be presented to the customer.  The Service Inventory API can be called by the Service Order Management to create a new service instance/ update an existing service instance in the Service Inventory.  ### Service resource Service is an abstract base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of  Service: CustomerFacingService and ResourceFacingService.  ### Service Inventory API performs the following operations on service  : - Retrieve  a service or a collection of services depending on filter criteria - Partial update of a service (including updating rules) - Create a service (including default values and creation rules and for administration users only) - Delete a service (for administration users only) - Notification of events on service  Copyright (c)TM Forum 2018. All Rights Reserved.",
  "main": "index.js",
  "scripts": {
	"prestart": "npm install",
	"start": "node index.js"
  },
  "keywords": [
    "swagger"
  ],
  "license": "Unlicense",
  "private": true,
  "dependencies": {
    "body-parser": "^1.15.2",
    "connect": "^3.2.0",
    "express": "^4.15.3",
    "js-yaml": "^3.3.0",
    "uuid": "^3.3.2",
    "query-to-mongo": "^0.9.0",
    "swagger-tools": "0.10.1",
    "cfenv": "^1.0.3",
    "commander": "^2.6.0",
    "http-post": "^0.1.1",
    "http-proxy": "^1.8.1",
    "mongodb": "^3.1.1",
    "swagger-ui-dist": "^3.17.6",
    "request": "^2.88.0",
    "request-promise": "^4.2.2",
    "untildify": "^3.0.3"
  },
  "engines": {
    "node": ">=8.10",
    "npm": ">=6.0"
  }
}
